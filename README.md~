# Simples Dental API

Este projeto Ã© uma API para gerenciamento de profissionais na Ã¡rea de saÃºde, utilizando Spring Boot.

## ðŸš€ Tecnologias Utilizadas

- **Java 17**
- **Spring Boot 6.1.0**
- **Jakarta Persistence (JPA)**
- **PostgreSQL**
- **Lombok**
- **JUnit 5 para testes**

## ðŸ“‚ Estrutura do Projeto

```
/src/main/java/com/teste/api/simples/dental
â”œâ”€â”€ controllers      # Controladores REST
â”œâ”€â”€ dtos            # Data Transfer Objects (DTOs)
â”œâ”€â”€ entities        # Entidades do banco de dados
â”œâ”€â”€ enums           # EnumeraÃ§Ãµes utilizadas
â”œâ”€â”€ repositories    # Interfaces de acesso ao banco de dados
â”œâ”€â”€ services        # Regras de negÃ³cio e lÃ³gica da aplicaÃ§Ã£o
â”œâ”€â”€ mapper          # Conversores entre entidades e DTOs
â””â”€â”€ SimplesDentalApplication.java  # Classe principal
```

## ðŸ”§ ConfiguraÃ§Ã£o do Ambiente

1. **Clone o repositÃ³rio**
   ```sh
   git clone https://github.com/arielbat19/SimplesDental.git
   ```
2. **Acesse o diretÃ³rio**
   ```sh
   cd NOME-DO-REPOSITORIO
   ```
3. **Configure o banco de dados** no arquivo `application.properties`:
   ```properties
   spring.datasource.url=jdbc:postgresql://localhost:5432/simples_dental
   spring.datasource.username=seu_usuario
   spring.datasource.password=sua_senha
   ```
   
4. **Para subir o banco de dados com o docker-compose**
      ```sh
      docker-compose up -d
      ```
   **Para parar o banco de dados com o docker-compose**
      ```sh
      docker-compose down
      ```
   
5. **Execute o projeto**
   ```sh
   mvn spring-boot:run
   ```

## ðŸ§ª Executando os Testes

Para rodar todos os testes automatizados, use:

```sh
mvn test
```

## ðŸ“Œ Endpoints Principais

### **Profissionais**

| MÃ©todo   | Endpoint              | DescriÃ§Ã£o                            |
| -------- | --------------------- | ------------------------------------ |
| `GET`    | `/profissionais`      | Lista todos os profissionais         |
| `GET`    | `/profissionais/{id}` | ObtÃ©m um profissional por ID         |
| `POST`   | `/profissionais`      | Cria um novo profissional            |
| `PUT`    | `/profissionais/{id}` | Atualiza os dados de um profissional |
| `DELETE` | `/profissionais/{id}` | Remove um profissional               |


### **Contato**

| MÃ©todo   | Endpoint         | DescriÃ§Ã£o                       |
| -------- | -----------------|---------------------------------|
| `GET`    | `/contatos`      | Busca todos os contatos         |
| `GET`    | `/contatos/{id}` | ObtÃ©m um contato por ID         |
| `POST`   | `/contatos`      | Cria um novo contato            |
| `PUT`    | `/contatos/{id}` | Atualiza os dados de um contato |
| `DELETE` | `/contatos/{id}` | Remove um contato               |
